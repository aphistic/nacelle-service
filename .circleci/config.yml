version: 2.1

executors:
  go:
    docker:
      - image: circleci/golang:1.12
    working_directory: ~/service

jobs:
  build:
    executor: go
    steps:
      - checkout
      - run: go get github.com/mattn/goveralls
      - run:
          name: Run unit tests
          command: |
            go get ./...
            goveralls -covermode=atomic -package=./... -race -service=circle-ci -v

  update_docs:
    executor: go
    steps:
      - run:
          command: |
            version="2.12.3"
            dir="hub-linux-amd64-$version"

            # Download hub utility and put it in PATH
            curl -L -o hub.tar.gz "https://github.com/github/hub/releases/download/v${version}/${dir}.tgz"
            tar -xvzf hub.tar.gz "${dir}/bin/hub"
            mv "${dir}/bin/hub" /usr/local/bin/hub
            rm -rf hub.tar.gz ${dir}
      - run:
          command: |
            repo="service"
            branch="sync-service-${CIRCLE_SHA1:0:6}"
            message="Sync documentation from go-nacelle/${repo}."

            # Clone website and update related docs
            hub clone go-nacelle/website.git
            cd website
            ./bin/update-repos.sh "${repo}"

            # See if docs have changed from master. If not,
            # there's nothing to create a PR for.
            if [[ -z $(git diff) ]]; then
              exit
            fi

            # Otherwise, create a commit and PR
            git checkout -b "${branch}"
            git commit -am "${message}"
            git push origin "${branch}"
            hub pull-request -m "${message}"

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - deploy:
          filters:
            branches:
              only: master
